<?xml version="1.0" encoding="UTF-8" ?>
<!--Bean的配置文档-->

<!--DOCTYPE声明：根据DTD验证XML-->
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
        "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <!--设定数据源dataSource-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <!--使用MySQL数据库-->
        <property name="driverClassName">
            <value>com.mysql.cj.jdbc.Driver</value>
        </property>
        <!--设定URL-->
        <property name="url">
            <value>
                jdbc:mysql://localhost:3306/db_hellodao?useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true
            </value>
        </property>
        <!--设定用户名-->
        <property name="name">
            <value>root</value>
        </property>
        <!--设定密码-->
        <property name="msg">
            <value>123456</value>
        </property>
    </bean>
    <!--设定transactionManager-->
    <bean id="transactionManager" class=
            "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>
    <!--HelloDAO-->
    <bean id="helloDAO" class="com.qzj.learn.HelloDAO">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
    </bean>

    <!--声明式事务处理-->
    <!--    <bean id="helloDAOProxy" class=-->
    <!--            "org.springframework.transaction.interceptor.TransactionProxyFactoryBean">-->
    <!--        &lt;!&ndash;指定事务管理器&ndash;&gt;-->
    <!--        <property name="transactionManager">-->
    <!--            <ref bean="transactionManager"/>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;指定要代理的类&ndash;&gt;-->
    <!--        <property name="target">-->
    <!--            <ref bean="helloDAO"/>-->
    <!--        </property>-->
    <!--        &lt;!&ndash;如果当前没有事务，就新建一个事务&ndash;&gt;-->
    <!--        <property name="transactionAttributes">-->
    <!--            <props>-->
    <!--                &lt;!&ndash;对代理类中的create()方法进行事务管理：-->
    <!--                PROPAGATION_REQUIRED：如果当前没有事务，就新建一个事务；-->
    <!--                PROPAGATION_SUPPORTS：如果当前没有事务，就以非事务方式执行；-->
    <!--                PROPAGATION_MANDATORY：如果当前没有事务，就抛出异常；-->
    <!--                PROPAGATION_REQUIRES_NEW：新建事务，如果当前存在事务，把当前事务挂起；-->
    <!--                PROPAGATION_NOT_SUPPORTED：以非事务方式执行操作，如果当前存在事务，把当前事务挂起；-->
    <!--                PROPAGATION_NEVER：以非事务方式执行，如果当前存在事务，则抛出异常。&ndash;&gt;-->
    <!--                <prop key="create*">PROPAGATION_REQUIRED</prop>-->
    <!--            </props>-->
    <!--        </property>-->
    <!--    </bean>-->

    <!--声明式事务处理的另一种配置方式-->
    <bean id="transactionInterceptor" class=
            "org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager">
            <ref bean="transactionManager"/>
        </property>
        <!--如果当前没有事务，就新建一个事务-->
        <property name="transactionAttributeSource">
            <value>
                com.qzj.learn.HelloDAO.create*=PROPAGATION_REQUIRED
            </value>
        </property>
    </bean>
    <bean id="helloDAOProxy2" class=
            "org.springframework.aop.framework.ProxyFactoryBean">
        <property name="interceptorNames">
            <value>transactionInterceptor, helloDAO</value>
        </property>
    </bean>
</beans>